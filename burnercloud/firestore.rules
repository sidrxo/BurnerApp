rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // --- Helper Functions ---
    function isAuthenticated() {
      return request.auth != null;
    }

    function isSiteAdmin() {
      return request.auth != null &&
             request.auth.token.role == 'siteAdmin' &&
             request.auth.token.active == true;
    }

    function isVenueAdmin() {
      return request.auth != null &&
             (request.auth.token.role == 'venueAdmin' || request.auth.token.role == 'subAdmin') &&
             request.auth.token.active == true;
    }

    function isScanner() {
      return request.auth != null &&
             request.auth.token.role == 'scanner' &&
             request.auth.token.active == true;
    }

    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }

    function getUserVenueId() {
      return request.auth.token.venueId;
    }

    function canAccessVenueData(venueId) {
      return isSiteAdmin() || (isVenueAdmin() && getUserVenueId() == venueId);
    }

    // --- Admins Collection ---
    match /admins/{adminId} {
      allow read: if isSiteAdmin() || isOwner(adminId);
      allow write: if isSiteAdmin();
    }

    // --- Scanners Collection ---
    match /scanners/{scannerId} {
      allow read: if isSiteAdmin() || isOwner(scannerId);
      allow write: if isSiteAdmin();
    }

    // --- Users Collection ---
    match /users/{userId} {
      allow read, write: if isSiteAdmin() || isOwner(userId);
      allow read: if isVenueAdmin();

      match /tickets/{ticketId} {
        allow read, write: if isSiteAdmin() || isOwner(userId);
        allow update: if isScanner();
      }

      match /bookmarks/{eventId} {
        allow read, write: if isSiteAdmin() || isOwner(userId);
      }
    }

    // --- Venues Collection ---
    match /venues/{venueId} {
      // Everyone can read venues (for public event listings)
      allow read: if true;
      // Only site admins can write
      allow write: if isSiteAdmin();
      // Venue admins can read their own venue
      allow read: if isVenueAdmin() && getUserVenueId() == venueId;
    }

    // --- Events Collection ---
    match /events/{eventId} {
      // Everyone can read events (for public listings)
      allow read: if true;
      // Site admins can do anything
      allow write: if isSiteAdmin();
      // Venue admins can create/update events for their venue
      allow create: if isVenueAdmin() && request.resource.data.venueId == getUserVenueId();
      allow update: if isVenueAdmin() && resource.data.venueId == getUserVenueId();
      allow delete: if isSiteAdmin();

      // Tickets subcollection
      match /tickets/{ticketId} {
        // Site admins can do anything
        allow read, write: if isSiteAdmin();
        // Users can read/manage their own tickets
        allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
        allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
        allow update: if (isAuthenticated() && resource.data.userId == request.auth.uid) || isScanner();
        allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
        // Venue admins can read tickets for their venue's events
        allow read: if isVenueAdmin() && get(/databases/$(database)/documents/events/$(eventId)).data.venueId == getUserVenueId();
        allow update: if isVenueAdmin() && get(/databases/$(database)/documents/events/$(eventId)).data.venueId == getUserVenueId();
      }
    }

    // --- Collection Group Query for Tickets ---
    match /{path=**}/tickets/{ticketId} {
      allow read, write: if isSiteAdmin();
      allow read: if isVenueAdmin() && resource.data.venueId == getUserVenueId();
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if (isAuthenticated() && resource.data.userId == request.auth.uid) ||
                    (isVenueAdmin() && resource.data.venueId == getUserVenueId()) ||
                    isScanner();
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // --- Main Tickets Collection ---
    match /tickets/{ticketId} {
      allow read, write: if isSiteAdmin();
      allow read: if isVenueAdmin() && resource.data.venueId == getUserVenueId();
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow update: if (isAuthenticated() && resource.data.userId == request.auth.uid) ||
                    (isVenueAdmin() && resource.data.venueId == getUserVenueId()) ||
                    isScanner();
      allow delete: if isAuthenticated() && resource.data.userId == request.auth.uid;
    }

    // --- Transactions Collection ---
    match /transactions/{transactionId} {
      allow read, write: if isSiteAdmin();
      allow read: if isAuthenticated() && resource.data.userId == request.auth.uid;
      allow write: if false; // Transactions are managed server-side
    }

    // --- Failed Purchases Collection ---
    match /failedPurchases/{purchaseId} {
      allow read: if isSiteAdmin();
      allow write: if false; // Managed server-side only
    }

    // --- Audit Logs Collection ---
    match /auditLogs/{logId} {
      allow read: if isSiteAdmin();
      allow write: if false; // Managed server-side only
    }

    // --- Metrics Collection (Daily Aggregations) ---
    match /metrics/{dateId} {
      allow read: if isSiteAdmin() || isVenueAdmin();
      allow write: if false; // Managed by scheduled functions
    }

    // --- Event Stats Collection (Per-Event Metrics) ---
    match /eventStats/{eventId} {
      allow read: if isSiteAdmin() || isVenueAdmin();
      allow write: if false; // Managed by triggers
    }

    // --- Pending Payments Collection ---
    match /pendingPayments/{paymentIntentId} {
      allow read: if isSiteAdmin() || (isAuthenticated() && resource.data.userId == request.auth.uid);
      allow write: if false; // Managed server-side only
    }
  }
}
